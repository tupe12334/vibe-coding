// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`builder > working with language and package manager 1`] = `
"# AI agent instructions

## General Guidelines

* Don't work on any of the tasks in the TODO.md file unless you are asked to.

* Always try to early return from functions.

* Use \`const\` for variables that are not reassigned.

* Make sure to focus on why and not how in documentation.

* Write predictable functions and make a spec file for them according to the testing library in use.

Package Manager: npm

## Programming language (typescript)

* Use Interfaces over Types unless needed.

* Use \`const\` over \`let\` unless reassignment is needed.

* Use \`===\` over \`==\` for strict equality checks.

* Use arrow functions for anonymous functions.

* Use template literals for string interpolation.
"
`;

exports[`builder > working with language only 1`] = `
"# AI agent instructions

## General Guidelines

* Don't work on any of the tasks in the TODO.md file unless you are asked to.

* Always try to early return from functions.

* Use \`const\` for variables that are not reassigned.

* Make sure to focus on why and not how in documentation.

* Write predictable functions and make a spec file for them according to the testing library in use.

## Programming language (javascript)

* Use \`const\` over \`let\` unless reassignment is needed.

* Use \`===\` over \`==\` for strict equality checks.

* Use arrow functions for anonymous functions.

* Use template literals for string interpolation.
"
`;

exports[`builder > working with language only with a language that is superset 1`] = `
"# AI agent instructions

## General Guidelines

* Don't work on any of the tasks in the TODO.md file unless you are asked to.

* Always try to early return from functions.

* Use \`const\` for variables that are not reassigned.

* Make sure to focus on why and not how in documentation.

* Write predictable functions and make a spec file for them according to the testing library in use.

## Programming language (typescript)

* Use Interfaces over Types unless needed.

* Use \`const\` over \`let\` unless reassignment is needed.

* Use \`===\` over \`==\` for strict equality checks.

* Use arrow functions for anonymous functions.

* Use template literals for string interpolation.
"
`;

exports[`builder > working with no arguments returns general segment only 1`] = `
"# AI agent instructions

## General Guidelines

* Don't work on any of the tasks in the TODO.md file unless you are asked to.

* Always try to early return from functions.

* Use \`const\` for variables that are not reassigned.

* Make sure to focus on why and not how in documentation.

* Write predictable functions and make a spec file for them according to the testing library in use.
"
`;

exports[`builder > working with project type only 1`] = `
"# AI agent instructions

## General Guidelines

* Don't work on any of the tasks in the TODO.md file unless you are asked to.

* Always try to early return from functions.

* Use \`const\` for variables that are not reassigned.

* Make sure to focus on why and not how in documentation.

* Write predictable functions and make a spec file for them according to the testing library in use.

## Project type (frontend)

* Prefer working with flex layouts for responsive design.

* Use rems for font sizes and spacing to ensure scalability.

* When writing a component, try to enter logic or network into it.
"
`;
