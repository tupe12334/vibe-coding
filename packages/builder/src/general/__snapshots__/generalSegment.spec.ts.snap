// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generalSegment > returns general guidelines 1`] = `
[
  {
    "children": [
      {
        "type": "text",
        "value": "General Guidelines",
      },
    ],
    "depth": 2,
    "type": "heading",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Don't work on any of the tasks in the TODO.md file unless you are asked to.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Always try to early return from functions.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Use \`const\` for variables that are not reassigned.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Make sure to focus on why and not how in documentation.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Write predictable functions and make a spec file for them according to the testing library in use.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Don't use \`any\` in TypeScript, use \`unknown\` instead.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Don't cast types without validation.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Whenever finish a task from the TODO.md file mark it as finished, if there is some that already marked as finish delete them",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
  {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "Work in a domain driven design (DDD) way, i.e. every function its is own module, and its its folder there is the code with JSDocs, spec file and types in there files.",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "listItem",
  },
]
`;
